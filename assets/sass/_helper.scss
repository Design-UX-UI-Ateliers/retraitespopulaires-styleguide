@charset 'UTF-8';

/* stylelint-disable declaration-no-important */
/* Purpose of helpers */

.list-no-style { list-style-type: none; }

.list-no-padding {
  margin: 0;
  padding: 0;
}

.list-unstyle-first > li:first-child {
  list-style-type: none;

  &:before {
    display: none;
  }
}

.list-spaced li { padding: $grid-gutter-width / 3 0; }

.list-inline li { display: inline-block; }

.inline-block { display: inline-block; }

.col-no-padding { padding: 0; }

/**
* Angles
*/

.angle {
  display: inline-block;

  &.angle-down {
    transform: rotate(45deg);
  }

  &.angle-up {
    transform: rotate(-45deg);
  }

  &.angle-force-top {
    transform: rotate(-90deg);
  }
}

.no-events {
  pointer-events: none;
}

.text-no-wrap {
  white-space: nowrap;
}

.text-normal {
  color: $text-color;
}

.text-break-all {
  word-break: break-all;

  @media (min-width: $screen-xs-min) {
    word-break: initial;
  }

  /* Hack Internet Explorer/Edge ≥ 10 */
  @media screen and (min-width: 0\0) {
    word-break: break-all;
  }
}

// wrap in a {% spaceless %} block (twig) to to handle the spacing correctly
// Please don't put links as first children though :(
.text-square-separation {
  > *:not(:last-child) {
    &:after {
      content: '\0025A0'; // ■
      position: relative;
      top: -0.55em;
      margin: 1em;
      font-size: 40%;
      color: $text-color;
    }
  }
}

/**
* Alignments of blocks
*/

.align-h {
  margin: 0 auto;
}

.align-v {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.align-vh {
  position: relative;
  top: 50%;
  margin: 0 auto;
  transform: translateY(-50%);
}

.no-padding {
  padding: 0 !important;
}

.no-x-padding {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.no-v-padding {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.flex-row {
  display: flex;
  flex-wrap: wrap;

  @supports (display: flex) {
    &:before,
    &:after {
      content: none;
    }
  }

  [class*=col-] {
    display: flex;
  }
}

.d-block {
  display: block !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.w-100 {
  width: 100%;
}

// Fix flex columns on mobile
@media screen and (max-width: $screen-xs-max) {
  [class*=col-]:not([class*=col-xs]) {
    width: 100%;
  }
}

/**
* Images
*/

.img-fullwidth {
  width: 100%;
}

/**
* Spacers
*/

.m-auto  { margin: auto !important; }
.m-t-auto { margin-top: auto !important; }
.m-r-auto { margin-right: auto !important; }
.m-b-auto { margin-bottom: auto !important; }
.m-l-auto { margin-left: auto !important; }

/* stylelint-disable, block-opening-brace-space-before, declaration-colon-space-after, rule-empty-line-before */
@each $prop, $abbrev in (margin: m, padding: p) {
  @each $size, $lengths in $spacers {
    $length-x: map-get($lengths, x);
    $length-y: map-get($lengths, y);

    .#{$abbrev}-#{$size}   { #{$prop}:        $length-y $length-x !important; }
    .#{$abbrev}-t-#{$size} { #{$prop}-top:    $length-y !important; }
    .#{$abbrev}-r-#{$size} { #{$prop}-right:  $length-x !important; }
    .#{$abbrev}-b-#{$size} { #{$prop}-bottom: $length-y !important; }
    .#{$abbrev}-l-#{$size} { #{$prop}-left:   $length-x !important; }
    .#{$abbrev}-x-#{$size} {
      #{$prop}-right: $length-x !important;
      #{$prop}-left:  $length-x !important;
    }
    .#{$abbrev}-y-#{$size} {
      #{$prop}-top:    $length-y !important;
      #{$prop}-bottom: $length-y !important;
    }
  }
}
/* stylelint-enable block-opening-brace-space-before, declaration-colon-space-after, rule-empty-line-before */

/**
* Flexible rows
*/

// TODO: DUPLICATED from flex-row, must be fixed one day :)
.row-flex {
  display: flex;
  flex-wrap: wrap;

  @supports (display: flex) {
    &:before,
    &:after {
      content: none;
    }
  }
}

.d-flex {
  display: flex;
}

.flex-center {
  justify-content: center;
}

.flex-space-between {
  justify-content: space-between;
}

.flex-1 {
  flex: 1 1 auto;
}

.flex-baseline {
  align-items: baseline;
}

/**
 * Background helpers
 */
@include bg-variant('.bg-berrylight-gray', $berrylight-gray);
@include bg-variant('.bg-light-gray', $light-gray);

// Add a `<div class="bg-special-waves"></div>` inside a `.background-overflow.bg-berrylight-gray` element.
.bg-special-waves {
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 200vw;
  padding-bottom: 47%;
  background: url('../svg/grey-waves.svg') repeat-x $white;
  background-size: 50% auto;
  transform: translateX(-50%);
  pointer-events: none;
}

/**
 * Fonts modifiers
 */

.font-weight-normal { font-weight: 400; }
.font-weight-bold { font-weight: 700; }
.font-italic { font-style: italic; }

/**
 * Flex same-height
 */

@media screen and (min-width: $screen-md-min) {
  .same-height-group {
    @supports (display: flex) {
      display: flex;

      &:before,
      &:after {
        content: none;
      }
    }
  }

  .same-height-group .same-height {
    display: flex;
  }
}
/* stylelint-enable declaration-no-important */
