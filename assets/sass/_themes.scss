@charset 'UTF-8';

// inspired by https://www.sassmeister.com/gist/39483fdd90c7c6c3e00a35cf77ec4516

$themes: (
  assurance: (
    color: $deep-yellow,
    hover-color: darken($deep-yellow, 10%)
  ),
  prevoyance: (
    color: $deep-orange,
    hover-color: darken($deep-orange, 10%)
  ),
  immobilier: (
    color: $deep-red,
    hover-color: darken($deep-red, 10%)
  ),
  hypotheque: (
    color: $deep-blue,
    hover-color: darken($deep-blue, 10%)
  ),
  institutionnel: (
    color: $deep-brown,
    hover-color: darken($deep-brown, 10%)
  ),
  profelia: (
    color: $deep-green,
    hover-color: darken($deep-green, 10%)
  ),
  cpev: (
    color: $light-green,
    hover-color: darken($light-green, 10%)
  ),
  cip: (
    color: $light-blue,
    hover-color: darken($light-blue, 10%)
  ),
  primary: (
    color: $brand-primary,
    hover-color: darken($brand-primary, 10%)
  ),
) !default;

@mixin theme($properties, $key: color) {
  @each $theme in map-keys($themes) {
    .theme-#{$theme} & {
      @each $property in $properties {
        #{$property}: map-deep-get($themes, $theme, $key);
      }
    }
  }
}

@mixin btn-theme($key: color) {
  @each $theme in map-keys($themes) {
    .theme-#{$theme} & {
      @include button-variant($white, map-deep-get($themes, $theme, $key), transparent);
    }
  }
}

@mixin pretty-link-theme($color: color, $bg: $white, $line: color) {
  @each $theme in map-keys($themes) {
    .theme-#{$theme} & {
      @include pretty-link($black, $bg, map-deep-get($themes, $theme, $line));
    }
  }
}

@mixin local($local) {
  $old: $color;
  $color: $local !global;

  @content;

  $color: $old !global;
}

@mixin theme-custom($key: color) {
  @each $theme in map-keys($themes) {
    .theme-#{$theme} & {
      @include local(map-deep-get($themes, $theme, $key)) {
        @content;
      }
    }
  }
}

/// Map deep get
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

/**
* Text colors
* @TODO: removed .text-highlight-theme, will break something somewhere
*/

a {
  @include theme(color);

  &:hover {
    @include theme(color, hover-color);
  }

  &.text-muted {
    color: $text-muted;
  }
}

/**
* Links
*/

/* stylelint-disable no-duplicate-selectors */
/* Make the code unreadable otherwise */

.entity-body a:not(.btn),
.pretty-link {
  @include pretty-link($black, $white, $brand-primary);
  @include pretty-link-theme();

  .bg-light-gray & {
    @include pretty-link-text-shadow($light-gray);
  }

  .bg-berrylight-gray & {
    @include pretty-link-text-shadow($berrylight-gray);
  }
}

.text-invert,
a.text-invert { color: $white; }

.no-underline,
a.no-underline {
  text-decoration: none;
  &:hover { text-decoration: none; }
}

/* stylelint-disable declaration-no-important */
/* Helper need important */

a.no-style {
  background: none !important;
}
/* stylelint-enable declaration-no-important */

.text-danger {
  &.pretty-link {
    @include pretty-link($black, $white, $brand-danger);
  }

  &.pretty-link-berrylight-gray {
    @include pretty-link($black, $berrylight-gray, $brand-danger);
  }

  &.pretty-link-light-gray {
    @include pretty-link($black, $berrylight-gray, $brand-danger);
  }
}

/* stylelint-enable */
